{"version":3,"sources":["../lib/rules/prefix-inc-dec-operators.ts","../lib/rules/index.ts","../lib/index.ts"],"names":[],"mappings":";AAEO,IAAM,qBAAA,GAAwB,WAAA,CAAY,WAAA,CAAY,WAAA,CAAY;AAAA,EACvE,gBAAgB,EAAC;AAAA,EACjB,IAAA,EAAM;AAAA,IACJ,IAAA,EAAM,YAAA;AAAA,IACN,IAAA,EAAM;AAAA,MACJ,WAAA,EAAa;AAAA,KACf;AAAA,IACA,OAAA,EAAS,MAAA;AAAA,IACT,cAAA,EAAgB,IAAA;AAAA,IAChB,QAAQ,EAAC;AAAA,IACT,QAAA,EAAU;AAAA,MACR,sBAAA,EAAwB,iDAAA;AAAA,MACxB,sBAAA,EAAwB,iDAAA;AAAA,MACxB,wBAAA,EAA0B,gDAAA;AAAA,MAC1B,wBAAA,EAA0B;AAAA;AAC5B,GACF;AAAA,EACA,MAAA,EAAQ,CAAC,OAAA,KAAY;AACnB,IAAA,OAAO;AAAA,MACL,gBAAA,EAAkB,CAAC,IAAA,KAAS;AAE1B,QAAA,IAAK,IAAA,CAAK,QAAA,KAAa,IAAA,IAAS,CAAC,KAAK,MAAA,EAAQ;AAC5C,UAAA,IAAK,IAAA,CAAK,OAAO,IAAA,KAAS,cAAA,CAAe,uBAAyB,IAAA,CAAK,MAAA,CAAO,IAAA,KAAS,cAAA,CAAe,YAAA,EAAe;AACnH,YAAA,OAAA,CAAQ,MAAA,CAAO;AAAA,cACb,IAAA;AAAA,cACA,SAAA,EAAW,wBAAA;AAAA,cACX,SAAS,CAAC;AAAA,gBACR,SAAA,EAAW,sBAAA;AAAA,gBACX,GAAA,EAAK,CAAC,KAAA,KAAU;AACd,kBAAA,OAAO,KAAA,CAAM,WAAA,CAAY,IAAA,EAAM,CAAA,EAAA,EAAK,OAAA,CAAQ,UAAA,CAAW,OAAA,CAAQ,IAAI,CAAA,CAAE,UAAA,CAAW,GAAA,EAAK,EAAE,CAAC,CAAA,CAAE,CAAA;AAAA,gBAC5F;AAAA,eACD;AAAA,aACF,CAAA;AACD,YAAA;AAAA,UACF;AAEA,UAAA,OAAA,CAAQ,MAAA,CAAO;AAAA,YACb,IAAA;AAAA,YACA,SAAA,EAAW;AAAA,WACZ,CAAA;AAED,UAAA;AAAA,QACF;AAGA,QAAA,IAAK,IAAA,CAAK,QAAA,KAAa,IAAA,IAAS,CAAC,KAAK,MAAA,EAAQ;AAC5C,UAAA,IAAK,IAAA,CAAK,OAAO,IAAA,KAAS,cAAA,CAAe,uBAAyB,IAAA,CAAK,MAAA,CAAO,IAAA,KAAS,cAAA,CAAe,YAAA,EAAe;AACnH,YAAA,OAAA,CAAQ,MAAA,CAAO;AAAA,cACb,IAAA;AAAA,cACA,SAAA,EAAW,wBAAA;AAAA,cACX,SAAS,CAAC;AAAA,gBACR,SAAA,EAAW,sBAAA;AAAA,gBACX,GAAA,EAAK,CAAC,KAAA,KAAU;AACd,kBAAA,OAAO,KAAA,CAAM,WAAA,CAAY,IAAA,EAAM,CAAA,EAAA,EAAK,OAAA,CAAQ,UAAA,CAAW,OAAA,CAAQ,IAAI,CAAA,CAAE,UAAA,CAAW,GAAA,EAAK,EAAE,CAAC,CAAA,CAAE,CAAA;AAAA,gBAC5F;AAAA,eACD;AAAA,aACF,CAAA;AACD,YAAA;AAAA,UACF;AAEA,UAAA,OAAA,CAAQ,MAAA,CAAO;AAAA,YACb,IAAA;AAAA,YACA,SAAA,EAAW;AAAA,WACZ,CAAA;AAED,UAAA;AAAA,QACF;AAAA,MACF;AAAA,KACF;AAAA,EACF;AACF,CAAC,CAAA;;;ACtEM,IAAM,KAAA,GAAQ;AAAA,EACnB,0BAAA,EAA4B;AAC9B,CAAA;;;ACFA,IAAO,aAAA,GAAQ;AAAA,EACb,IAAA,EAAM;AAAA,IACJ,IAAA,EAAM,yBAAA;AAAA,IACN,OAAA,EAAS;AAAA,GACX;AAAA,EACA;AACF","file":"index.js","sourcesContent":["import { AST_NODE_TYPES, ESLintUtils } from \"@typescript-eslint/utils\";\n\nexport const prefixIncDecOperators = ESLintUtils.RuleCreator.withoutDocs({\n  defaultOptions: [],\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Prefer prefix increment/decrement operators over postfix operators\"\n    },\n    fixable: \"code\",\n    hasSuggestions: true,\n    schema: [],\n    messages: {\n      \"fix:postfixIncrement\": \"Replace postfix increment with prefix increment\",\n      \"fix:postfixDecrement\": \"Replace postfix decrement with prefix decrement\",\n      \"issue:postfixIncrement\": \"Prefer prefix increment over postfix increment\",\n      \"issue:postfixDecrement\": \"Prefer prefix decrement over postfix decrement\",\n    }\n  },\n  create: (context) => {\n    return {\n      UpdateExpression: (node) => {\n        // Detect `i++`\n        if ((node.operator === \"++\") && !node.prefix) {\n          if ((node.parent.type === AST_NODE_TYPES.ExpressionStatement) || (node.parent.type === AST_NODE_TYPES.ForStatement)) {\n            context.report({\n              node: node,\n              messageId: \"issue:postfixIncrement\",\n              suggest: [{\n                messageId: \"fix:postfixIncrement\",\n                fix: (fixer) => {\n                  return fixer.replaceText(node, `++${context.sourceCode.getText(node).replaceAll(\"+\", \"\")}`);\n                }\n              }]\n            });\n            return;\n          }\n\n          context.report({\n            node: node,\n            messageId: \"issue:postfixIncrement\",\n          });\n\n          return;\n        }\n\n        // Detect `i--`\n        if ((node.operator === \"--\") && !node.prefix) {\n          if ((node.parent.type === AST_NODE_TYPES.ExpressionStatement) || (node.parent.type === AST_NODE_TYPES.ForStatement)) {\n            context.report({\n              node: node,\n              messageId: \"issue:postfixDecrement\",\n              suggest: [{\n                messageId: \"fix:postfixDecrement\",\n                fix: (fixer) => {\n                  return fixer.replaceText(node, `--${context.sourceCode.getText(node).replaceAll(\"-\", \"\")}`);\n                }\n              }]\n            });\n            return;\n          }\n\n          context.report({\n            node: node,\n            messageId: \"issue:postfixDecrement\",\n          });\n\n          return;\n        }\n      }\n    };\n  }\n});\n","import { prefixIncDecOperators } from \"./prefix-inc-dec-operators.ts\";\n\nexport const rules = {\n  \"prefix-inc-dec-operators\": prefixIncDecOperators\n};\n","import { rules } from \"./rules/index.ts\";\n\nexport default {\n  meta: {\n    name: \"eslint-plugin-qbt-webui\",\n    version: \"1.0.0\",\n  },\n  rules: rules\n};\n"]}